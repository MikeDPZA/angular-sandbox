{
    "pipes": [],
    "interfaces": [],
    "injectables": [],
    "guards": [],
    "interceptors": [],
    "classes": [
        {
            "name": "DonutDataModel",
            "id": "class-DonutDataModel-cea59c9c3c98f820b0a6e5081bd5ff3101fb61ecfed94b49e803cf49062bf8c9e10b8ca6d00d79589fd203942a9063078fd0e6d2422a3bae674925269eaaa850",
            "file": "src/app/@common/models/donutModel.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "export class DonutModel {\r\n\r\n  constructor(init?: Partial<DonutModel>) {\r\n    Object.assign(this, init)\r\n  }\r\n\r\n  title: string = '';\r\n  values: DonutDataModel[] = [];\r\n}\r\n\r\nexport class DonutDataModel {\r\n  constructor(init?: Partial<DonutDataModel>) {\r\n    Object.assign(this, init)\r\n  }\r\n\r\n  name: string = '';\r\n  value: number = 0\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "init",
                        "type": "Partial<DonutDataModel>",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "optional": true
                    }
                ],
                "line": 11,
                "jsdoctags": [
                    {
                        "name": "init",
                        "type": "Partial<DonutDataModel>",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "optional": true,
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "properties": [
                {
                    "name": "name",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "value",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 17
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "DonutModel",
            "id": "class-DonutModel-cea59c9c3c98f820b0a6e5081bd5ff3101fb61ecfed94b49e803cf49062bf8c9e10b8ca6d00d79589fd203942a9063078fd0e6d2422a3bae674925269eaaa850",
            "file": "src/app/@common/models/donutModel.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "export class DonutModel {\r\n\r\n  constructor(init?: Partial<DonutModel>) {\r\n    Object.assign(this, init)\r\n  }\r\n\r\n  title: string = '';\r\n  values: DonutDataModel[] = [];\r\n}\r\n\r\nexport class DonutDataModel {\r\n  constructor(init?: Partial<DonutDataModel>) {\r\n    Object.assign(this, init)\r\n  }\r\n\r\n  name: string = '';\r\n  value: number = 0\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "init",
                        "type": "Partial<DonutModel>",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "optional": true
                    }
                ],
                "line": 1,
                "jsdoctags": [
                    {
                        "name": "init",
                        "type": "Partial<DonutModel>",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "optional": true,
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "properties": [
                {
                    "name": "title",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "values",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "DonutDataModel[]",
                    "optional": false,
                    "description": "",
                    "line": 8
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        }
    ],
    "directives": [],
    "components": [
        {
            "name": "AppComponent",
            "id": "component-AppComponent-6e2ae1fc79433b7876e2c099489387dde8c5c9c275b55add0fdd5f5646d9bc21564ed03a76aeca47c6615d32685052df5ed8af002a8b74718f7948ac94591352",
            "file": "src/app/app.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-root",
            "styleUrls": [
                "./app.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./app.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "donutData",
                    "defaultValue": "new DonutModel({\r\n    title: 'Donut Default Title',\r\n    values: [\r\n      new DonutDataModel({name: 'Key 1', value: 5}),\r\n      new DonutDataModel({name: 'Key 2', value: 10}),\r\n    ]\r\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "title",
                    "defaultValue": "'angular-sandbox'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 10
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\nimport {DonutDataModel, DonutModel} from \"./@common/models/donutModel\";\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent {\r\n  title = 'angular-sandbox';\r\n\r\n  donutData = new DonutModel({\r\n    title: 'Donut Default Title',\r\n    values: [\r\n      new DonutDataModel({name: 'Key 1', value: 5}),\r\n      new DonutDataModel({name: 'Key 2', value: 10}),\r\n    ]\r\n  })\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./app.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<app-card [CardTitle]=\"'This is a title'\">\r\n    <app-donut [DonutData]=\"donutData\"></app-donut>\r\n</app-card>\r\n"
        },
        {
            "name": "CardComponent",
            "id": "component-CardComponent-cf898fb31578b72605bfa33836f97142d2ed155000b25e55d0d691850bf1d7eed9d6ba6c16114b9832b662ba0d51dd4407768b1086834c456b586665f440ea65",
            "file": "src/app/@common/components/card/card.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-card",
            "styleUrls": [
                "./card.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./card.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "CardTitle",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 9,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 13,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {Component, Input, OnInit} from '@angular/core';\n\n@Component({\n  selector: 'app-card',\n  templateUrl: './card.component.html',\n  styleUrls: ['./card.component.scss']\n})\nexport class CardComponent implements OnInit {\n  @Input() CardTitle: string = '';\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".card {\r\n  border: gray 2px solid;\r\n  border-radius: 5px 5px;\r\n  margin: 0.5em;\r\n  padding: 0.5em;\r\n\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: flex-start;\r\n\r\n  h3 {\r\n    margin: 0;\r\n  }\r\n\r\n  .content {\r\n    display: flex;\r\n    flex-direction: row;\r\n    justify-content: flex-start;\r\n  }\r\n}\r\n",
                    "styleUrl": "./card.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 9
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"card\">\n  <h3>{{CardTitle}}</h3>\n  <div class=\"content\">\n    <ng-content></ng-content>\n  </div>\n</div>\n"
        },
        {
            "name": "DonutComponent",
            "id": "component-DonutComponent-f327505abefa798df717305982712e92832755ed611cf011bb97d8ac50849322033e5e3febb7673e5a9534cb9247bc13d158341f47101925bfdac0f95d1fede3",
            "file": "src/app/@common/components/donut/donut.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-donut",
            "styleUrls": [
                "./donut.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./donut.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "DonutData",
                    "defaultValue": "new DonutModel()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "DonutModel",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "options",
                    "defaultValue": "{}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "EChartsOption",
                    "optional": false,
                    "description": "",
                    "line": 14
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnChanges",
                    "args": [
                        {
                            "name": "changes",
                            "type": "SimpleChanges",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 23,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "changes",
                            "type": "SimpleChanges",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 19,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "setOptions",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 29,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {Component, Input, OnChanges, OnInit, SimpleChanges} from '@angular/core';\nimport {DonutModel} from \"../../models/donutModel\";\nimport {EChartsOption} from \"echarts\";\n\n@Component({\n  selector: 'app-donut',\n  templateUrl: './donut.component.html',\n  styleUrls: ['./donut.component.scss']\n})\nexport class DonutComponent implements OnInit, OnChanges {\n\n  @Input() DonutData: DonutModel = new DonutModel()\n\n  options: EChartsOption = {}\n\n  constructor() {\n  }\n\n  ngOnInit(): void {\n    this.setOptions();\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    // if (changes['DonutData']?.currentValue !== changes['DonutData']?.previousValue){\n    //   this.setOptions();\n    // }\n  }\n\n  private setOptions() {\n    this.options.title = {\n      text: this.DonutData.title\n    }\n\n    this.options.series = [\n      {\n        type: 'pie',\n        data: this.DonutData.values.map(_ => {\n          return {\n            name: _.name,\n            value: _.value\n          }\n        }),\n      }\n    ];\n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".chart-container {\r\n  width: 500px;\r\n  height: 500px\r\n}\r\n",
                    "styleUrl": "./donut.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 14
            },
            "implements": [
                "OnInit",
                "OnChanges"
            ],
            "templateData": "<canvas echarts [options]=\"options\" [merge]=\"options\" [autoResize]=\"true\" class=\"chart-container\"></canvas>\n"
        }
    ],
    "modules": [
        {
            "name": "AppModule",
            "id": "module-AppModule-d1e911feb4363894ffb5366079041c2c8245abe4371c71123c3a9b38cef22054e3f98f7a455ae60c8e96e68d4bc0750993856a591aebb44d0054a3d1d0242625",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/app.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport {CommonModule} from \"./@common/common.module\";\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    CommonModule,\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent],\r\n  exports: [\r\n    CommonModule\r\n  ]\r\n})\r\nexport class AppModule { }\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "AppComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "CommonModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "CommonModule"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": [
                        {
                            "name": "AppComponent"
                        }
                    ]
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "CommonModule",
            "id": "module-CommonModule-a8b5afc54e6e50c7600ffa7d625c1445e0758819cff3202db6bb0c9506b074c004d4a69b0df7b2d24f49df2f3874d21d8af6c8af06a31d9f27165e70c51fa1b9",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/@common/common.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CardComponent } from './components/card/card.component';\nimport { DonutComponent } from './components/donut/donut.component';\nimport {NgxEchartsModule} from \"ngx-echarts\";\nimport * as echarts from 'echarts';\n\n\n\n@NgModule({\n  declarations: [\n    CardComponent,\n    DonutComponent\n  ],\n  imports: [\n    NgxEchartsModule.forRoot({echarts})\n  ],\n  exports: [\n    CardComponent,\n    DonutComponent\n  ]\n})\nexport class CommonModule { }\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "CardComponent"
                        },
                        {
                            "name": "DonutComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "CardComponent"
                        },
                        {
                            "name": "DonutComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        }
    ],
    "miscellaneous": {
        "variables": [
            {
                "name": "context",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/test.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
            },
            {
                "name": "DefaultDonut",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/@common/components/donut/donut.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "(args) => ({\r\n  props: args\r\n})"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environment.prod.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\r\n  production: true\r\n}"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environment.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\r\n  production: false\r\n}"
            },
            {
                "name": "require",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/test.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "literal type"
            },
            {
                "name": "SomeContent",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/@common/components/card/card.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "(args) => ({\r\n  props: args,\r\n  template: `\r\n    <app-card [CardTitle]=\"CardTitle\">\r\n        <ul>\r\n        <li>Foo</li>\r\n        <li>Bar</li>\r\n        <li>Baz</li>\r\n        </ul>\r\n    </app-card>\r\n  `\r\n})"
            },
            {
                "name": "TitleOnly",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/@common/components/card/card.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "(args) => ({\r\n  props: args\r\n})"
            }
        ],
        "functions": [],
        "typealiases": [],
        "enumerations": [
            {
                "name": "AlignmentEnum",
                "childs": [
                    {
                        "name": "Auto",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "auto"
                    },
                    {
                        "name": "Left",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "left"
                    },
                    {
                        "name": "Right",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "right"
                    },
                    {
                        "name": "Center",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "center"
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "file": "src/app/@common/enum/alignment.enum.ts"
            }
        ],
        "groupedVariables": {
            "src/test.ts": [
                {
                    "name": "context",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/test.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
                },
                {
                    "name": "require",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/test.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type"
                }
            ],
            "src/app/@common/components/donut/donut.component.stories.ts": [
                {
                    "name": "DefaultDonut",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/@common/components/donut/donut.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "(args) => ({\r\n  props: args\r\n})"
                }
            ],
            "src/environments/environment.prod.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environment.prod.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\r\n  production: true\r\n}"
                }
            ],
            "src/environments/environment.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environment.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\r\n  production: false\r\n}"
                }
            ],
            "src/app/@common/components/card/card.component.stories.ts": [
                {
                    "name": "SomeContent",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/@common/components/card/card.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "(args) => ({\r\n  props: args,\r\n  template: `\r\n    <app-card [CardTitle]=\"CardTitle\">\r\n        <ul>\r\n        <li>Foo</li>\r\n        <li>Bar</li>\r\n        <li>Baz</li>\r\n        </ul>\r\n    </app-card>\r\n  `\r\n})"
                },
                {
                    "name": "TitleOnly",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/@common/components/card/card.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "(args) => ({\r\n  props: args\r\n})"
                }
            ]
        },
        "groupedFunctions": {},
        "groupedEnumerations": {
            "src/app/@common/enum/alignment.enum.ts": [
                {
                    "name": "AlignmentEnum",
                    "childs": [
                        {
                            "name": "Auto",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "auto"
                        },
                        {
                            "name": "Left",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "left"
                        },
                        {
                            "name": "Right",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "right"
                        },
                        {
                            "name": "Center",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "center"
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "file": "src/app/@common/enum/alignment.enum.ts"
                }
            ]
        },
        "groupedTypeAliases": {}
    },
    "routes": [],
    "coverage": {
        "count": 0,
        "status": "low",
        "files": [
            {
                "filePath": "src/app/@common/components/card/card.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "SomeContent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/@common/components/card/card.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "TitleOnly",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/@common/components/card/card.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CardComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/@common/components/donut/donut.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "DefaultDonut",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/@common/components/donut/donut.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "DonutComponent",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/@common/models/donutModel.ts",
                "type": "class",
                "linktype": "classe",
                "name": "DonutDataModel",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/@common/models/donutModel.ts",
                "type": "class",
                "linktype": "classe",
                "name": "DonutModel",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/app.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AppComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/environments/environment.prod.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/environments/environment.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "context",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "require",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            }
        ]
    }
}